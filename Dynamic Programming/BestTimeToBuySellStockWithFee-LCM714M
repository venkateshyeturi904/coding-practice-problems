class Solution {
    int[] prices;
    int fee;
    int n;
    Integer[][] dp;
    public int maxProfit(int[] prices, int fee) {
        this.prices = prices;
        this.fee = fee;
        n = prices.length;
        dp = new Integer[n][2];
        return dfs(0,0);
    }
    public int dfs(int i, int have){
        if(i==prices.length) return 0;
        if(dp[i][have]!=null) return dp[i][have];
        if(have==1){
            int sell = prices[i]-fee+dfs(i+1,0);
            int notSell = dfs(i+1,1);
            return dp[i][have]=Math.max(sell,notSell);
        }else{
            int buy = -prices[i]+dfs(i+1,1);
            int notBuy = dfs(i+1,0);
            return dp[i][have]=Math.max(buy,notBuy);
        }
    }
}
