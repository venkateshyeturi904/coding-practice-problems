class Solution {
    Map<String,Double> dp = new HashMap<>();
    public double soupServings(int n) {
        if(n>4800) return 1.0;
        return dfs(n,n);
    }
    public double dfs(int a, int b){
        if(a<=0 && b<=0) return 0.5;
        else if(a<=0) return 1;
        else if(b<=0) return 0;
        String curr = String.valueOf(a)+"-"+String.valueOf(b);
        if(dp.containsKey(curr)) return dp.get(curr);
        double prob1 = 0.25 * dfs(a-100,b);
        double prob2 = 0.25 * dfs(a-75,b-25);
        double prob3 = 0.25 * dfs(a-50,b-50);
        double prob4 = 0.25 * dfs(a-25,b-75);
        double total = prob1 + prob2 + prob3 + prob4;
        dp.put(curr,total);
        return total;
    }
}

