class Solution {
    public int[][] updateMatrix(int[][] mat) {
        int n = mat.length;
        int m = mat[0].length;
        int[][] ans = new int[n][m];
        boolean[][] visited = new boolean[n][m];
        Queue<int[]> q = new LinkedList<>();
        int[][] dir = {{1,0},{0,1},{0,-1},{-1,0}};
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(mat[i][j]==0){
                    visited[i][j] = true;
                    ans[i][j] = 0;
                    q.offer(new int[]{i,j,0});
                }
            }
        }
        while(!q.isEmpty()){
            int[] curr = q.poll();
            int i = curr[0];
            int j = curr[1];
            int dist = curr[2];
            for(int k=0;k<4;k++){
                int newI = i+dir[k][0];
                int newJ = j+dir[k][1];
                if(newI<0 || newJ<0 || newI==n || newJ==m || visited[newI][newJ]) continue;
                visited[newI][newJ] = true;
                ans[newI][newJ] = dist+1;
                q.offer(new int[]{newI, newJ, dist+1});
            }
        }
        return ans;
    }
}
