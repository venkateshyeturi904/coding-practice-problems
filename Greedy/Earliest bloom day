/*
Leetcode my solution link : https://leetcode.com/problems/earliest-possible-day-of-full-bloom/solutions/3660746/greedy-sort-growingtime/
*/
class Solution {
    public int earliestFullBloom(int[] plantTime, int[] growTime) {
        int n = plantTime.length;
        int[][] arr = new int[n][2];
        for(int i=0;i<n;i++){
            arr[i][0] = plantTime[i];
            arr[i][1] = growTime[i];
        }
        Arrays.sort(arr,(a,b)->b[1]-a[1]);
        int timeSpent = 0;
        int totalTime = 0;
        for(int i=0;i<n;i++){
            totalTime = Math.max(totalTime, timeSpent+arr[i][0]+arr[i][1]);
            timeSpent += arr[i][0];
        }
        return totalTime;
    }
}
