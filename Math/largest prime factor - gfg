/ * Time complexity : O(sqrt(N))* /

class Solution{
    static long largestPrimeFactor(int N) {
        int ans = 1;
        for(int i=1;i<=(int)Math.sqrt(N);i++){
            if(N%i==0){
                int curr = N/i;
                if(isPrime(curr)) return curr;
                if(isPrime(i)){
                    ans = Math.max(ans, i);
                }
            }
        }
        return ans;
    }
    public static boolean isPrime(int p){
        if(p<=2) return true;
        for(int i=2;i<=(int)Math.sqrt(p);i++){
            if(p%i==0) return false;
        }
        return true;
    }
}
