class Solution {
    public List<String> topKFrequent(String[] words, int k) {
        Map<String,Integer> map = new HashMap<>();
        for(String s : words){
            map.put(s,map.getOrDefault(s,0)+1);
        }
        PriorityQueue<Pair<String,Integer>> pq = new PriorityQueue<>((a,b)->compare(a,b));
        for(String s : map.keySet()){
            pq.offer(new Pair<>(new String(s),map.get(s)));
        }
        List<String> res = new ArrayList<>();
        for(int i=k;i>0;i--) res.add(pq.poll().getKey());
        return res;
    }
    public int compare(Pair<String,Integer> p1, Pair<String,Integer> p2){
        int diff = p1.getValue()-p2.getValue();
        if(diff==0){
            String s1 = p1.getKey();
            String s2 = p2.getKey();
            for(int i=0;i<Math.min(s1.length(),s2.length());i++){
                if((int)s1.charAt(i)<(int)s2.charAt(i)) return -1;
                else if((int)s1.charAt(i)>(int)s2.charAt(i)) return 1;
            }
            if(s1.length()>s2.length()) return 1;
            else return -1;
        }else{
            return p2.getValue()-p1.getValue();
        }
    }
}
